plugins {
	id 'groovy'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "2022.0.2")
	set('swaggerVersion', '2.1.0')
	set('oauth2Version', '2.5.2.RELEASE')
	set('springVersion', '6.0.3')
	set('micrometerVersion', '1.10.5')
	set('spockVersion', '2.4-M1-groovy-3.0')
}

dependencies {
	implementation project(':common-lib')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation "org.springframework.security.oauth:spring-security-oauth2:${oauth2Version}"
	implementation "org.springframework.security:spring-security-oauth2-resource-server:${springVersion}"
	implementation "org.springframework.kafka:spring-kafka"
	implementation "org.springframework.data:spring-data-redis"
	implementation "redis.clients:jedis"
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${swaggerVersion}"
	implementation "io.micrometer:micrometer-core:${micrometerVersion}"
	implementation "io.micrometer:micrometer-registry-prometheus:${micrometerVersion}"
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.spockframework:spock-core:${spockVersion}"
	testImplementation "org.spockframework:spock-spring:${spockVersion}"
	testImplementation 'org.codehaus.groovy:groovy-all:3.0.8'
	testImplementation "org.springframework.security:spring-security-test:${springVersion}"
	testRuntimeOnly 'com.h2database:h2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

bootBuildImage {
	imageName = "${rootProject.name}/${project.name}:${version}"
}