plugins {
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "2022.0.2")
	set('openapiVersion', '1.7.0')
	set('micrometerVersion', '1.10.5')
	set('jjwtVersion', "0.11.2")
}

dependencies {
	implementation (project(':common-lib')) {
		exclude group: 'jakarta.servlet', module: 'jakarta.servlet-api'
	}
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'io.github.resilience4j:resilience4j-micrometer'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation "org.springdoc:springdoc-openapi-webflux-ui:${openapiVersion}"
	implementation "io.micrometer:micrometer-core:${micrometerVersion}"
	implementation "io.micrometer:micrometer-registry-prometheus:${micrometerVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootBuildImage {
	imageName = "${rootProject.name}/${project.name}:${version}"
}
