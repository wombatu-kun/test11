version: '3.3'
services:
  database:
    image: postgres:13.4-buster
    ports:
      - "5498:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DATABASES: delivery_users,delivery_orders,delivery_shipping,delivery_queries
    volumes:
      - ./create-databases.sh:/docker-entrypoint-initdb.d/create-databases.sh
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 20s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      backend:
        aliases:
          - "redis"
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - "zookeeper"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=users:1:1,orders:1:1,zipkin:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"
  configserver:
    image: wk-delivery-app/configserver:0.0.1-SNAPSHOT
    ports:
       - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: "native,docker"
      ENCRYPT_KEY: "xnEPrusbBSnMaSjkyP3hdXA49BFXbWEeQh27x4LmeL"
    networks:
      backend:
        aliases:
          - "configserver"
  eurekaserver:
    image: wk-delivery-app/eurekaserver:0.0.1-SNAPSHOT
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - configserver
    restart: on-failure
    networks:
      backend:
        aliases:
          - "eurekaserver"
  adminserver:
    image: wk-delivery-app/adminserver:0.0.1-SNAPSHOT
    ports:
      - "8089:8089"
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      ENCRYPT_KEY: "xnEPrusbBSnMaSjkyP3hdXA49BFXbWEeQh27x4LmeL"
    depends_on:
      - configserver
    restart: on-failure
    networks:
      backend:
        aliases:
          - "adminserver"
  gatewayserver:
    image: wk-delivery-app/gatewayserver:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      ENCRYPT_KEY: "xnEPrusbBSnMaSjkyP3hdXA49BFXbWEeQh27x4LmeL"
    depends_on:
      - configserver
      - eurekaserver
      - redis
    restart: on-failure
    networks:
      backend:
        aliases:
          - "gatewayserver"
  auth-service:
    image: wk-delivery-app/auth-service:0.0.1-SNAPSHOT
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      ENCRYPT_KEY: "xnEPrusbBSnMaSjkyP3hdXA49BFXbWEeQh27x4LmeL"
    depends_on:
      - database
      - configserver
      - eurekaserver
      - kafka
    restart: on-failure
    networks:
      backend:
        aliases:
          - "auth-service"
  order-service:
    image: wk-delivery-app/order-service:0.0.1-SNAPSHOT
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      ENCRYPT_KEY: "xnEPrusbBSnMaSjkyP3hdXA49BFXbWEeQh27x4LmeL"
    depends_on:
      - database
      - configserver
      - eurekaserver
      - kafka
    restart: on-failure
    networks:
      backend:
        aliases:
          - "order-service"
  shipping-service:
    image: wk-delivery-app/shipping-service:0.0.1-SNAPSHOT
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      ENCRYPT_KEY: "xnEPrusbBSnMaSjkyP3hdXA49BFXbWEeQh27x4LmeL"
    depends_on:
      - database
      - redis
      - configserver
      - eurekaserver
      - kafka
    restart: on-failure
    networks:
      backend:
        aliases:
          - "shipping-service"
  query-service:
    image: wk-delivery-app/query-service:0.0.1-SNAPSHOT
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      ENCRYPT_KEY: "xnEPrusbBSnMaSjkyP3hdXA49BFXbWEeQh27x4LmeL"
    depends_on:
      - database
      - configserver
      - eurekaserver
      - kafka
    restart: on-failure
    networks:
      backend:
        aliases:
          - "query-service"
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    container_name: prometheus
    networks:
      backend:
        aliases:
          - "prometheus"
  grafana:
    image: "grafana/grafana:latest"
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    container_name: grafana
    networks:
      backend:
        aliases:
          - "grafana"
  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    container_name: zipkin
    environment:
      - "KAFKA_BOOTSTRAP_SERVERS=kafka:9092"
    depends_on:
      - kafka
    networks:
      backend:
        aliases:
          - "zipkin"

networks:
  backend:
    driver: bridge
